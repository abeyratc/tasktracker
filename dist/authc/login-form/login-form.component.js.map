{"version":3,"sources":["../app/authc/login-form/login-form.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA4C,eAAe,CAAC,CAAA;AAC5D,uBAAuB,iBAAiB,CAAC,CAAA;AAEzC,6BAA4B,iBAAiB,CAAC,CAAA;AAS9C;IAaC,4BAAmB,WAAwB,EAAS,MAAc;QAA/C,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QACjE,IAAI,CAAC,aAAa,EAAE,CAAC;IACtB,CAAC;IAED,kCAAK,GAAL;QAAA,iBAmBC;QAlBA,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;gBAC9D,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;oBAClC,OAAO,CAAC,GAAG,CAAC,cAAc,GAAC,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAA;oBACvD,IAAI,QAAQ,GAAG,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;oBAC7D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAA;gBAC7B,CAAC;YACC,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAA;YACrC,CAAC;YACD,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAA;YACrC,CAAC;QACF,CAAC;IACF,CAAC;IAED,mCAAM,GAAN;QACC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAEE,uCAAU,GAAV,UAAW,WAAkB;QAC5B,EAAE,CAAA,CAAC,CAAC,WAAW,IAAI,WAAW,KAAK,OAAO,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,YAAY,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,CAAC,WAAW,CAAC;QACpB,CAAC;IACF,CAAC;IAEJ,0CAAa,GAAb;QACC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACnB,CAAC;IApDD;QAAC,YAAK,EAAE;;wDAAA;IAGR;QAAC,YAAK,EAAE;;wDAAA;IAGR;QAAC,YAAK,EAAE;;oDAAA;IAdT;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAE,2BAA2B;YACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;SAC1C,CAAC;;0BAAA;IAwDF,yBAAC;AAAD,CAtDA,AAsDC,IAAA;AAtDY,0BAAkB,qBAsD9B,CAAA","file":"login-form.component.js","sourcesContent":["import { Component, Input, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../auth.service';\n\n@Component({\n    moduleId: module.id,\n    selector: 'login-form',\n    templateUrl: 'login-form.component.html',\n    styleUrls: ['login-form.component.css']\n})\n\nexport class LoginFormComponent {\n\t@Input()\n\tusername: string;\n\n\t@Input() \n\tpassword: string;\n\n\t@Input()\n\tname: string;\n\n\terrorun: string;\n\terrorpw: string;\n\n\tconstructor(public authService: AuthService, public router: Router) {\n\t\tthis.clearMessages();\n\t}\n\n\tlogin(): void {\n\t\tif(this.username && this.password) {\n\t\t\tthis.authService.login(this.username, this.password).subscribe(() => {\n\t\t\t\tif (this.authService.isLoggedIn) {\n\t\t\t\tconsole.log(\"redirectUrl=\"+this.authService.redirectUrl)\n\t\t\t\t\tlet redirect = this.redirectTo(this.authService.redirectUrl);\n\t\t\t\t\tthis.router.navigate([redirect]);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"not logged in\")\n\t\t\t\t}\n    \t\t});\n\t\t} else {\n\t\t\tif(!this.username) {\n\t\t\t\tthis.errorun = '* Username required'\n\t\t\t}\n\t\t\tif(!this.password) {\n\t\t\t\tthis.errorpw = '* Password required'\n\t\t\t}\n\t\t}\n\t}\n\n\tlogout() {\n\t\tthis.authService.logout();\n\t}\n\n    redirectTo(redirectUrl:string): string {\n    \tif(!redirectUrl || redirectUrl === 'login') {\n    \t\treturn '/taskboard';\n    \t} else {\n    \t\treturn redirectUrl;\n    \t}\n    }\n\n\tclearMessages(): void {\n\t\tthis.errorun = '';\n\t\tthis.errorpw = '';\n\t}\n}"],"sourceRoot":"../.."}