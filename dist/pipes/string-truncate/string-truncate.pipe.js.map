{"version":3,"sources":["../app/pipes/string-truncate/string-truncate.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoC,eAAe,CAAC,CAAA;AAEpD,IAAM,aAAa,GAAG,CAAC,CAAC;AACxB,IAAM,WAAW,GAAG,EAAE,CAAC;AAGvB;IAAA;IAoCA,CAAC;IAnCA,sCAAS,GAAT,UAAU,KAAa,EAAE,IAAc;QACtC,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC1B,EAAE,CAAA,CAAC,MAAM,IAAI,WAAW,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,KAAK,GAAG,aAAa,CAAC;YAC1B,IAAI,GAAG,GAAG,WAAW,CAAC;YACtB,IAAI,IAAI,SAAI,CAAC;YACb,IAAI,IAAI,SAAI,CAAC;YACb,EAAE,CAAA,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACvB,KAAK,GAAG,aAAa,CAAC;oBACtB,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,GAAG,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;gBACvC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,EAAE,CAAA,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;wBAC7E,KAAK,GAAG,IAAI,CAAC;wBACb,GAAG,GAAG,IAAI,CAAC;oBACZ,CAAC;gBACF,CAAC;YACF,CAAC;YACD,2DAA2D;YAC3D,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,MAAM,CAAA;QACxC,CAAC;IACF,CAAC;IAEO,sCAAS,GAAjB,UAAkB,KAAa;QAC9B,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAC5B,CAAC;IAEO,oCAAO,GAAf,UAAgB,GAAW,EAAE,KAAa;QACzC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC;IAClC,CAAC;IApCF;QAAC,WAAI,CAAC,EAAC,IAAI,EAAE,aAAa,EAAC,CAAC;;0BAAA;IAqC5B,yBAAC;AAAD,CApCA,AAoCC,IAAA;AApCY,0BAAkB,qBAoC9B,CAAA","file":"string-truncate.pipe.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\nconst DEFAULT_START = 0;\nconst DEAFULT_END = 25;\n\n@Pipe({name: 'strTruncate'})\nexport class StringTruncatePipe implements PipeTransform {\n\ttransform(value: string, args: string[]): string {\n\t\tlet strLen = value.length;\n\t\tif(strLen <= DEAFULT_END) {\n\t\t\treturn value;\n\t\t} else {\n\t\t\tlet start = DEFAULT_START;\n\t\t\tlet end = DEAFULT_END;\n\t\t\tlet arg1:any;\n\t\t\tlet arg2:any;\n\t\t\tif(args && args.length > 0) {\n\t\t\t\tif (args.length === 1) {\n\t\t\t\t\tstart = DEFAULT_START;\n\t\t\t\t\targ1 = this.toDecimal(args[0]);\n\t\t\t\t\tend = (arg1 > strLen) ? strLen : arg1;\n\t\t\t\t} else {\n\t\t\t\t\targ1 = this.toDecimal(args[0]);\n\t\t\t\t\targ2 = this.toDecimal(args[1]);\n\t\t\t\t\tif(this.inRange(arg1, strLen) && this.inRange(arg2, strLen) && arg1 <= arg2) {\n\t\t\t\t\t\tstart = arg1;\n\t\t\t\t\t\tend = arg2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//console.log(\"start=\"+start+\" end=\"+end+\" strLen=\"+strLen)\n\t\t\treturn value.slice(start, end) + ' ...'\n\t\t}\n\t}\n\n\tprivate toDecimal(value: string) {\n\t\treturn parseInt(value, 10);\n\t}\n\n\tprivate inRange(arg: number, bound: number): boolean {\n\t\treturn (arg >= 0 && arg < bound);\n\t}\n}"],"sourceRoot":"../.."}