{"version":3,"sources":["../app/tasks/task-card/task-card.component.spec.ts"],"names":[],"mappings":"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","file":"task-card.component.spec.js","sourcesContent":["import { async, inject, TestBed, ComponentFixture } from '@angular/core/testing';\nimport { Component } from '@angular/core';\nimport { By } from '@angular/platform-browser';\n\nimport { Task, Status } from '../task';\nimport { TASKS } from '../mock-task';\n\nimport { TaskCardComponent } from './task-card.component';\nimport { TaskHistoryComponent } from '../task-history/task-history.component';\nimport { StatusTransformPipe } from '../../pipes/status-trans/status-transform.pipe';\nimport { StringTruncatePipe } from '../../pipes/string-truncate/string-truncate.pipe';\n\n@Component({template: ''})\nclass MockTaskHistoryComponent {}\n\nlet comp:TaskCardComponent;\nlet fixture: ComponentFixture<TaskCardComponent>;\n\ndescribe('TaskCardComponent', () => {\n\n\tbeforeEach(async(() => {\n\t\tTestBed.configureTestingModule({\n\t\t\tdeclarations: [\n\t\t\t\tMockTaskHistoryComponent,\n\t\t\t\tTaskCardComponent,\n\t\t\t\tTaskHistoryComponent,\n\t\t\t\tStatusTransformPipe,\n\t\t\t\tStringTruncatePipe\n\t\t\t]\n\t\t})\n\t\t.overrideDirective(TaskHistoryComponent, MockTaskHistoryComponent)\n\t\t.compileComponents().then(()=> {\n\t\t\tfixture = TestBed.createComponent(TaskCardComponent);\n\t\t\tcomp = fixture.componentInstance;\n\t\t\tcomp.task = {id: 1, name: 'Task Name', description: 'Task Description', status: Status.Ready, startDate: new Date(), duration: 1, notes: []};\n\n\t\t});\n\t}));\n\t\n\tit('should define the task card component ', () => {\n\t\tfixture.detectChanges();\n\n\t\texpect(comp).toBeDefined();\n\t\texpect(comp instanceof TaskCardComponent).toBe(true);\n\t});\n\n\tit('should move card to STARTED column on click moveForward once ', () => {\n\t\tfixture.detectChanges();\n\n\t\tlet el = fixture.debugElement.nativeElement;\n\t\tlet anchorTags = el.getElementsByTagName(\"a\");\n\t\tanchorTags[anchorTags.length -1].click(); // click move forward button\n\n\t\texpect(comp.task.status).toEqual(Status.Inprogress);\n\t});\n\n\tit('should move card to FINISHED column on click moveForward twice ', () => {\n\t\tfixture.detectChanges();\n\n\t\tlet el = fixture.debugElement.nativeElement;\n\t\tlet anchorTags = el.getElementsByTagName(\"a\");\n\t\tanchorTags[anchorTags.length -1].click(); // click first time\n\t\tanchorTags[anchorTags.length -1].click(); // click second time\n\n\t\texpect(comp.task.status).toEqual(Status.Finished);\n\t});\n\n\tit('should move card to READY column on click moveBack once ', () => {\n\t\tcomp.task.status = Status.Inprogress;\n\n\t\tfixture.detectChanges();\n\n\t\tlet el = fixture.debugElement.nativeElement;\n\t\tlet anchorTags = el.getElementsByTagName(\"a\");\n\t\tanchorTags[0].click(); // click move forward button\n\n\t\texpect(comp.task.status).toEqual(Status.Ready);\n\t});\n\n\tit('should move card to STARTED column on click moveBack once ', () => {\n\t\tcomp.task.status = Status.Finished;\n\n\t\tfixture.detectChanges();\n\n\t\tlet el = fixture.debugElement.nativeElement;\n\t\tlet anchorTags = el.getElementsByTagName(\"a\");\n\t\tanchorTags[0].click(); // click move forward button\n\n\t\texpect(comp.task.status).toEqual(Status.Inprogress);\n\t});\n});"],"sourceRoot":"../.."}