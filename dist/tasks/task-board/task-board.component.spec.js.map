{"version":3,"sources":["../app/tasks/task-board/task-board.component.spec.ts"],"names":[],"mappings":"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","file":"task-board.component.spec.js","sourcesContent":["import { async, inject, TestBed, ComponentFixture } from '@angular/core/testing';\nimport {\n  Http, HttpModule, XHRBackend, ResponseOptions,\n  Response, BaseRequestOptions\n} from '@angular/http';\nimport { MockBackend, MockConnection } from '@angular/http/testing';\nimport { Component } from '@angular/core';\nimport { By } from '@angular/platform-browser';\n\nimport { Task, Status } from '../task';\nimport { TASKS } from '../mock-task';\n\nimport { TaskBoardComponent } from './task-board.component';\nimport { TaskCardComponent } from '../task-card/task-card.component';\nimport { TaskFormComponent } from '../task-form/task-form.component';\nimport { TaskService } from '../task.service';\n\n@Component({template: ''})\nclass MockTaskCardComponent {\n}\n\n@Component({template: ''})\nclass MockTaskFormComponent {\n}\n\nclass MockTaskService extends TaskService {\n\tgetTasks(): Promise<Task[]> {\n\t\treturn Promise.resolve(TASKS);\n\t}\n}\n\nlet comp:TaskBoardComponent;\nlet fixture: ComponentFixture<TaskBoardComponent>;\n\ndescribe('Task Board Component', () => {\n\n\tbeforeEach(async(() => {\n\t\tTestBed.configureTestingModule({\n\n\t\t\tdeclarations: [\n\t\t\t\tMockTaskCardComponent,\n\t\t\t\tMockTaskFormComponent,\n\t\t\t\tTaskBoardComponent,\n\t\t\t\tTaskCardComponent,\n\t\t\t\tTaskFormComponent\n\t\t\t],\n\n\t\t\tproviders: [\n\t\t\t\t{\tprovide: TaskService, \n\t\t\t\t\tuseClass: MockTaskService \n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: Http, useFactory: (backend: XHRBackend, options: BaseRequestOptions) => {\n\t\t\t\t\t\treturn new Http(backend, options);\n\t\t\t\t\t},\n\t\t\t\t\tdeps: [MockBackend, BaseRequestOptions]\n\t\t\t\t},\n\t\t\t\tMockBackend,\n\t\t\t\tBaseRequestOptions,\n\t\t\t]\n\t\t})\n\t\t.overrideDirective(TaskCardComponent, MockTaskCardComponent)\n\t\t.overrideDirective(TaskFormComponent, MockTaskFormComponent)\n\t\t.compileComponents().then(()=> {\n\t\t\tfixture = TestBed.createComponent(TaskBoardComponent);\n\t\t\tcomp = fixture.componentInstance;\n\t\t\tcomp.ngOnInit();\n\t\t});\n\t}));\n\n\tit('should define the task board component ', () => {\n\t\tfixture.detectChanges();\n\n\t\texpect(comp).toBeDefined();\n\t\texpect(comp instanceof TaskBoardComponent).toBe(true);\n\t});\n\n\tit('should populate the correct table headers ', () => {\n\t\tfixture.detectChanges();\n\t\tlet el = fixture.debugElement.nativeElement;\n\t\tlet tableHeader = el.getElementsByTagName(\"th\");\n\n\t\texpect(tableHeader[0].innerHTML).toMatch('READY');\n\t\texpect(tableHeader[1].innerHTML).toMatch('STARTED');\n\t\texpect(tableHeader[2].innerHTML).toMatch('FINISHED');\n\t});\n\n\tit('should populate the first card in READY column ', () => {\n\t\tfixture.detectChanges();\n\t\tlet el = fixture.debugElement.nativeElement;\n\t\tlet tableRows = el.getElementsByTagName(\"tr\");\n\t\tlet cells = tableRows[1].getElementsByTagName(\"td\");\n\n\t\texpect(cells[0].innerHTML).toContain('task-card');\n\t\texpect(cells[1].innerHTML).not.toContain('task-card');\n\t\texpect(cells[2].innerHTML).not.toContain('task-card');\n\t});\n\n\tit('should populate second card in the STARTED column ', () => {\n\t\tfixture.detectChanges();\n\t\tlet el = fixture.debugElement.nativeElement;\n\t\tlet tableRows = el.getElementsByTagName(\"tr\");\n\t\tlet cells = tableRows[2].getElementsByTagName(\"td\");\n\n\t\texpect(cells[0].innerHTML).not.toContain('task-card');\n\t\texpect(cells[1].innerHTML).toContain('task-card');\n\t\texpect(cells[2].innerHTML).not.toContain('task-card');\n\t});\n\n\tit('should populate last card in the FINISHED column ', () => {\n\t\tfixture.detectChanges();\n\t\tlet el = fixture.debugElement.nativeElement;\n\t\tlet tableRows = el.getElementsByTagName(\"tr\");\n\t\tlet cells = tableRows[4].getElementsByTagName(\"td\");\n\n\t\texpect(cells[0].innerHTML).not.toContain('task-card');\n\t\texpect(cells[1].innerHTML).not.toContain('task-card');\n\t\texpect(cells[2].innerHTML).toContain('task-card');\n\t});\n});"],"sourceRoot":"../.."}